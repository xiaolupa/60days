# library
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn  as sns
from scipy import stats
import math
import statistics
#讓圖可以在 jupyter notebook顯示
%matplotlib inline
df_train = pd.read_csv("Titanic_train.csv")


print(df_train['Fare'].mean())
print(df_train['Fare'].std())

g = sns.FacetGrid(df_train, col='Survived')
g.map(sns.distplot,'Fare', kde=False)

#進行一個描述性的統計（規定範圍），從而檢視哪些值是不合理的（範圍以外的值）。
df_train['Fare'].describe()
#最大值512遠高於75%的31可能是離群值

#進行3倍標準差原則的計算，從而檢視哪些值是可疑的異常值。
# 創建一個函數，計算在這個資料中， ys:資料，times : 幾倍標準差，找出在這樣條件下的異常值。
def outliers_z_score(ys,times):
    mean_y = np.mean(ys)
    stdev_y = np.std(ys)
    z_scores = [(y - mean_y) / stdev_y for y in ys]
    return np.where(np.abs(z_scores) > times)
out_index=outliers_z_score(df_train['Fare'],3)
print(out_index[0])

print("用第二種方法的找出的 outlier 有哪些?")

print(df_train.loc[out_index[0],'Fare'])
[ 27  88 118 258 299 311 341 377 380 438 527 557 679 689 700 716 730 737
 742 779]
用第二種方法的找出的 outlier 有哪些?
27     263.0000
88     263.0000
118    247.5208
258    512.3292
299    247.5208
311    262.3750
341    263.0000
377    211.5000
380    227.5250
438    263.0000
527    221.7792
557    227.5250
679    512.3292
689    211.3375
700    227.5250
716    227.5250
730    211.3375
737    512.3292
742    262.3750
779    211.3375
Name: Fare, dtype: float64

#盒鬚圖判別法(IQR method)
# 透過一個函數來判斷是否為異常值
def outliers_iqr(ys,times):
    #注意 使用 np.percentile 要去除 nan 要不然計算出來會錯誤，所以我們採用下者的程式 np.nanpercentile
    #quartile_1, quartile_3 = np.percentile(ys, [25, 75])
    quartile_1, quartile_3 = np.nanpercentile(ys, [25, 75])
    iqr = quartile_3 - quartile_1
    lower_bound = quartile_1 - (iqr * times)
    upper_bound = quartile_3 + (iqr * times)
    return np.where((ys > upper_bound) | (ys < lower_bound))

out_index2=outliers_iqr(df_train['Fare'],1.5)
print(out_index2)
print("用第三種方法的找出的 outlier 有哪些?(1.5 倍IQR)")
print(df_train.loc[out_index2[0],'Fare'])

out_index2=outliers_iqr(df_train['Fare'],2)
print(out_index2)
print("用第三種方法的找出的 outlier 有哪些?(2 倍IQR)")
print(df_train.loc[out_index2[0],'Fare'])

#畫圖
plt.boxplot(df_train['Fare'][~np.isnan(df_train['Fare'])],whis=2)    #作圖
plt.title('Box Plot')

plt.show()


#你覺得找出的異常是真的異常? 你覺得需要做處理嗎?
#離群植的數目很多，且都為高價者
#同樣價格的高價者多為一個以上，如兩個票價512的最高價，輸入錯誤的機會不大
#故異常價可能真為當時的價格，不需特別做處理
